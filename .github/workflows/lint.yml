name: Lint and Test Charts

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  pull-requests: write
  contents: write

jobs:
  lint-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        k8s:
          - v1.23.5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.9.2

      - uses: actions/setup-python@v5
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Add bitnami helm report
        run: helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi
      - name: Run chart-testing (lint)
        run: ct lint --config ct.yaml

      - name: Create kind ${{ matrix.k8s }} cluster
        uses: helm/kind-action@v1.9.0
        if: steps.list-changed.outputs.changed == 'true'
        with:
          node_image: kindest/node:${{ matrix.k8s }}
          cluster_name: kind-cluster-${{ matrix.k8s }}

      - name: Run chart-testing (install)
        run: ct install --config ct.yaml

  automerge:
    needs: lint-test
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.actor == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2.0.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Approve Dependabot PR
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --rebase "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}